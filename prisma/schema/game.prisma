model Game {
    id            Int          @id @default(autoincrement()) @map("game_id")
    title         String
    publisherId   Int          @map("publisher_id")
    releaseDate   DateTime     @map("release_date")
    price         Float
    discountPrice Float?       @map("discount_price")
    description   String
    reviews       Review[]
    playerGames   PlayerGame[]
    gameGenres    GameGenre[]
    bundleGames   BundleGame[]

    publisher Publisher @relation(fields: [publisherId], references: [id], onDelete: Cascade)

    @@map("games")
}

model Review {
    id       Int     @id @default(autoincrement()) @map("review_id")
    playerId String  @map("player_id")
    gameId   Int     @map("game_id")
    rating   Int
    comment  String?

    createdAt DateTime @default(now()) @map("created_at")

    player Player @relation(fields: [playerId], references: [userId], onDelete: Cascade)
    game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

    @@map("reviews")
}

model Bundle {
    id            Int    @id @default(autoincrement()) @map("bundle_id")
    title         String
    discountPrice Float? @map("discount_price")

    bundleGames BundleGame[]

    @@map("bundles")
}

model BundleGame {
    bundleId Int @map("bundle_id")
    gameId   Int @map("game_id")

    bundle Bundle @relation(fields: [bundleId], references: [id], onDelete: Cascade)
    game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

    @@id([bundleId, gameId])
    @@map("bundles_games")
}

model Genre {
    id   Int    @id @map("genre_id")
    name String

    gameGenres GameGenre[]

    @@map("genres")
}

model GameGenre {
    gameId  Int @map("game_id")
    genreId Int @map("genre_id")

    game  Game  @relation(fields: [gameId], references: [id])
    genre Genre @relation(fields: [genreId], references: [id])

    @@id([gameId, genreId])
    @@map("games_genres")
}
